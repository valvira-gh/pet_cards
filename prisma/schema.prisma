// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(cuid())
  email String @unique
  name  String?
  posts Post[]  // Post[] will be for testing purposes before moving to pets


  // METADATA //
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // My new approach is to store hashed passwords in a separate table,
  // that is linked to the right user by a foreign key, possibly other means as well
  credentials Credential[]
}

model Credential {
  id        String @id @default(cuid())
  secret_1  String
  user      User   @relation(fields: [userId], references: [id])
  userId    String
}

model Post {
  id        String @id @default(cuid())
  title     String
  content   String
  published Boolean @default(false)
  author    User? @relation(fields: [authorId], references: [id])
  authorId  String?
  // METADATA //
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}